{"ast":null,"code":"import _initializerDefineProperty from \"C:/Users/Phantom/Desktop/react-ts-todo/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"C:/Users/Phantom/Desktop/react-ts-todo/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"C:/Users/Phantom/Desktop/react-ts-todo/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Phantom\\\\Desktop\\\\react-ts-todo\\\\src\\\\App.tsx\",\n  _class,\n  _descriptor,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet TaskStore = (_class = class TaskStore {\n  constructor() {\n    _initializerDefineProperty(this, \"tasks\", _descriptor, this);\n  }\n  addTask(title) {\n    if (title.trim() !== '') {\n      const newTaskItem = {\n        id: String(Date.now()),\n        title: title,\n        completed: false,\n        createDate: new Date()\n      };\n      this.tasks.push(newTaskItem);\n    }\n  }\n  toggleTask(taskId) {\n    const task = this.tasks.find(task => task.id === taskId);\n    if (task) {\n      task.completed = !task.completed;\n    }\n  }\n  removeTask(taskId) {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n  }\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"tasks\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"addTask\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addTask\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleTask\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleTask\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeTask\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeTask\"), _class.prototype)), _class);\nconst taskStore = new TaskStore();\nconst App = _s(observer(_c = _s(() => {\n  _s();\n  const [newTask, setNewTask] = useState('');\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      taskStore.addTask(newTask);\n      setNewTask('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter task\",\n        value: newTask,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: taskStore.tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => taskStore.toggleTask(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: task.completed ? 'completed' : '',\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => taskStore.removeTask(task.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}, \"QOAGQFXMDiH3FEIJhH0k9gfFdKU=\")), \"QOAGQFXMDiH3FEIJhH0k9gfFdKU=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","observer","observable","action","jsxDEV","_jsxDEV","TaskStore","_class","constructor","_initializerDefineProperty","_descriptor","addTask","title","trim","newTaskItem","id","String","Date","now","completed","createDate","tasks","push","toggleTask","taskId","task","find","removeTask","filter","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor","taskStore","App","_s","_c","newTask","setNewTask","handleInputChange","event","target","value","handleKeyPress","key","className","children","type","placeholder","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","map","checked","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Phantom/Desktop/react-ts-todo/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport './App.css';\n\nclass TaskStore {\n  @observable tasks = [];\n\n  @action\n  addTask(title) {\n    if (title.trim() !== '') {\n      const newTaskItem = {\n        id: String(Date.now()),\n        title: title,\n        completed: false,\n        createDate: new Date(),\n      };\n      this.tasks.push(newTaskItem);\n    }\n  }\n\n  @action\n  toggleTask(taskId) {\n    const task = this.tasks.find(task => task.id === taskId);\n    if (task) {\n      task.completed = !task.completed;\n    }\n  }\n\n  @action\n  removeTask(taskId) {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n  }\n}\n\nconst taskStore = new TaskStore();\n\nconst App = observer(() => {\n  const [newTask, setNewTask] = useState('');\n\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      taskStore.addTask(newTask);\n      setNewTask('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter task\"\n          value={newTask}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n        />\n      </div>\n      <ul>\n        {taskStore.tasks.map(task => (\n          <li key={task.id} className=\"task-item\">\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onChange={() => taskStore.toggleTask(task.id)}\n            />\n            <span className={task.completed ? 'completed' : ''}>{task.title}</span>\n            <button className=\"remove-button\" onClick={() => taskStore.removeTask(task.id)}>\n              Remove\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}