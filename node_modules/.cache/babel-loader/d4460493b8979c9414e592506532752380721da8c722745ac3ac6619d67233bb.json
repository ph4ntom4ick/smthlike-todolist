{"ast":null,"code":"import _initializerDefineProperty from \"C:/Users/Phantom/Desktop/react-ts-todo/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"C:/Users/Phantom/Desktop/react-ts-todo/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"C:/Users/Phantom/Desktop/react-ts-todo/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Phantom\\\\Desktop\\\\react-ts-todo\\\\src\\\\App.tsx\",\n  _class,\n  _descriptor,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet TaskStore = (_class = class TaskStore {\n  constructor() {\n    _initializerDefineProperty(this, \"tasks\", _descriptor, this);\n  }\n  addTask(title) {\n    if (title.trim() !== '') {\n      const newTaskItem = {\n        id: String(Date.now()),\n        title: title,\n        completed: false,\n        createDate: new Date()\n      };\n      this.tasks.push(newTaskItem);\n    }\n  }\n  toggleTask(taskId) {\n    const task = this.tasks.find(task => task.id === taskId);\n    if (task) {\n      task.completed = !task.completed;\n    }\n  }\n  removeTask(taskId) {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n  }\n  getPercentageCompleted() {\n    const finishedTasks = this.tasks.filter(task => task.completed).length;\n    return this.tasks.length > 0 ? finishedTasks / this.tasks.length * 100 : 0;\n  }\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"tasks\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"addTask\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addTask\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleTask\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleTask\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeTask\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeTask\"), _class.prototype)), _class);\nconst taskStore = new TaskStore();\nconst App = _s(observer(_c = _s(() => {\n  _s();\n  const [newTask, setNewTask] = useState('');\n  const [isListLayout, setIsListLayout] = useState(true);\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      taskStore.addTask(newTask);\n      setNewTask('');\n    }\n  };\n  const toggleView = () => {\n    setIsListLayout(!isListLayout);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isListLayout ? 'list-layout' : 'tiles-layout'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Almost there: \", taskStore.getPercentageCompleted().toFixed(2), \"% done\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleView,\n        children: isListLayout ? 'Switch to Tiles' : 'Switch to List'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter task\",\n        value: newTask,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: taskStore.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task-item ${task.completed ? 'completed' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => taskStore.toggleTask(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => taskStore.removeTask(task.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}, \"FpUata0ng0x/zqyw3tHv++Zu5Yg=\")), \"FpUata0ng0x/zqyw3tHv++Zu5Yg=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","observer","observable","action","jsxDEV","_jsxDEV","TaskStore","_class","constructor","_initializerDefineProperty","_descriptor","addTask","title","trim","newTaskItem","id","String","Date","now","completed","createDate","tasks","push","toggleTask","taskId","task","find","removeTask","filter","getPercentageCompleted","finishedTasks","length","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor","taskStore","App","_s","_c","newTask","setNewTask","isListLayout","setIsListLayout","handleInputChange","event","target","value","handleKeyPress","key","toggleView","className","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","onKeyPress","map","checked","_c2","$RefreshReg$"],"sources":["C:/Users/Phantom/Desktop/react-ts-todo/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport './App.css';\n\ninterface Task {\n  id: string;\n  title: string;\n  completed: boolean;\n  createDate: Date;\n}\n\nclass TaskStore {\n  @observable tasks: Task[] = [];\n\n  @action\n  addTask(title: string) {\n    if (title.trim() !== '') {\n      const newTaskItem = {\n        id: String(Date.now()),\n        title: title,\n        completed: false,\n        createDate: new Date(),\n      };\n      this.tasks.push(newTaskItem);\n    }\n  }\n\n  @action\n  toggleTask(taskId: string) {\n    const task = this.tasks.find(task => task.id === taskId);\n    if (task) {\n      task.completed = !task.completed;\n    }\n  }\n\n  @action\n  removeTask(taskId: string) {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n  }\n\n  getPercentageCompleted() {\n    const finishedTasks = this.tasks.filter(task => task.completed).length;\n    return this.tasks.length > 0 ? (finishedTasks / this.tasks.length) * 100 : 0;\n  }\n}\n\nconst taskStore = new TaskStore();\n\nconst App = observer(() => {\n  const [newTask, setNewTask] = useState('');\n  const [isListLayout, setIsListLayout] = useState(true);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTask(event.target.value);\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      taskStore.addTask(newTask);\n      setNewTask('');\n    }\n  };\n\n  const toggleView = () => {\n    setIsListLayout(!isListLayout);\n  };\n\n  return (\n    <div className={`App ${isListLayout ? 'list-layout' : 'tiles-layout'}`}>\n      <nav>\n        <p>Almost there: {taskStore.getPercentageCompleted().toFixed(2)}% done</p>\n        <button onClick={toggleView}>\n          {isListLayout ? 'Switch to Tiles' : 'Switch to List'}\n        </button>\n      </nav>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter task\"\n          value={newTask}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n        />\n      </div>\n      <div className=\"tasks-container\">\n        {taskStore.tasks.map(task => (\n          <div key={task.id} className={`task-item ${task.completed ? 'completed' : ''}`}>\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onChange={() => taskStore.toggleTask(task.id)}\n            />\n            <span>{task.title}</span>\n            <button className=\"remove-button\" onClick={() => taskStore.removeTask(task.id)}>\n              Remove\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}