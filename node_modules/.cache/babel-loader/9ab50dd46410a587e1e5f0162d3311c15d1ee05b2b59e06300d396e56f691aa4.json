{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phantom\\\\Desktop\\\\react-ts-todo\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport './App.css';\nimport { makeAutoObservable } from 'mobx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TaskStore {\n  constructor() {\n    this.tasks = [];\n    this.newTask = '';\n    this.isListLayout = true;\n    makeAutoObservable(this);\n  }\n  handleInputChange(event) {\n    this.newTask = event.target.value;\n  }\n  handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      this.addTask();\n    }\n  }\n  addTask() {\n    if (this.newTask.trim() !== '') {\n      const newTaskItem = {\n        id: String(Date.now()),\n        title: this.newTask,\n        completed: false,\n        createDate: new Date()\n      };\n      this.tasks.push(newTaskItem);\n      this.newTask = '';\n    }\n  }\n  toggleTask(taskId) {\n    const task = this.tasks.find(task => task.id === taskId);\n    if (task) {\n      task.completed = !task.completed;\n    }\n  }\n  removeTask(taskId) {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n  }\n  get finishedTasks() {\n    return this.tasks.filter(task => task.completed).length;\n  }\n  get percentageCompleted() {\n    return this.tasks.length > 0 ? this.finishedTasks / this.tasks.length * 100 : 0;\n  }\n  toggleLayout() {\n    this.isListLayout = !this.isListLayout;\n  }\n}\nconst store = new TaskStore();\nconst App = observer(_c = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Almost there: \", store.percentageCompleted.toFixed(2), \"% done\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => store.toggleLayout(),\n        children: store.isListLayout ? 'Switch to Tiles' : 'Switch to List'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter task\",\n        value: store.newTask,\n        onChange: event => store.handleInputChange(event),\n        onKeyPress: event => store.handleKeyPress(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => store.addTask(),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), store.isListLayout ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: store.tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => store.toggleTask(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: task.completed ? 'completed' : '',\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => store.removeTask(task.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tiles-container\",\n      children: store.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task-item tile ${task.completed ? 'completed' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => store.toggleTask(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => store.removeTask(task.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","observer","makeAutoObservable","jsxDEV","_jsxDEV","TaskStore","constructor","tasks","newTask","isListLayout","handleInputChange","event","target","value","handleKeyPress","key","addTask","trim","newTaskItem","id","String","Date","now","title","completed","createDate","push","toggleTask","taskId","task","find","removeTask","filter","finishedTasks","length","percentageCompleted","toggleLayout","store","App","_c","className","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","onKeyPress","map","checked","_c2","$RefreshReg$"],"sources":["C:/Users/Phantom/Desktop/react-ts-todo/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport './App.css';\nimport { makeAutoObservable } from 'mobx';\n\nclass TaskStore {\n  tasks = [];\n  newTask = '';\n  isListLayout = true;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  handleInputChange(event) {\n    this.newTask = event.target.value;\n  }\n\n  handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      this.addTask();\n    }\n  }\n\n  addTask() {\n    if (this.newTask.trim() !== '') {\n      const newTaskItem = {\n        id: String(Date.now()),\n        title: this.newTask,\n        completed: false,\n        createDate: new Date(),\n      };\n      this.tasks.push(newTaskItem);\n      this.newTask = '';\n    }\n  }\n\n  toggleTask(taskId) {\n    const task = this.tasks.find((task) => task.id === taskId);\n    if (task) {\n      task.completed = !task.completed;\n    }\n  }\n\n  removeTask(taskId) {\n    this.tasks = this.tasks.filter((task) => task.id !== taskId);\n  }\n\n  get finishedTasks() {\n    return this.tasks.filter((task) => task.completed).length;\n  }\n\n  get percentageCompleted() {\n    return this.tasks.length > 0 ? (this.finishedTasks / this.tasks.length) * 100 : 0;\n  }\n\n  toggleLayout() {\n    this.isListLayout = !this.isListLayout;\n  }\n}\n\nconst store = new TaskStore();\n\nconst App = observer(() => {\n  return (\n    <div className=\"App\">\n      <nav>\n        <p>Almost there: {store.percentageCompleted.toFixed(2)}% done</p>\n        <button onClick={() => store.toggleLayout()}>\n          {store.isListLayout ? 'Switch to Tiles' : 'Switch to List'}\n        </button>\n      </nav>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter task\"\n          value={store.newTask}\n          onChange={(event) => store.handleInputChange(event)}\n          onKeyPress={(event) => store.handleKeyPress(event)}\n        />\n        <button onClick={() => store.addTask()}>Add Task</button>\n      </div>\n      {store.isListLayout ? (\n        <ul>\n          {store.tasks.map((task) => (\n            <li key={task.id} className=\"task-item\">\n              <input\n                type=\"checkbox\"\n                checked={task.completed}\n                onChange={() => store.toggleTask(task.id)}\n              />\n              <span className={task.completed ? 'completed' : ''}>{task.title}</span>\n              <button className=\"remove-button\" onClick={() => store.removeTask(task.id)}>\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className=\"tiles-container\">\n          {store.tasks.map((task) => (\n            <div key={task.id} className={`task-item tile ${task.completed ? 'completed' : ''}`}>\n              <input\n                type=\"checkbox\"\n                checked={task.completed}\n                onChange={() => store.toggleTask(task.id)}\n              />\n              <span>{task.title}</span>\n              <button className=\"remove-button\" onClick={() => store.removeTask(task.id)}>\n                Remove\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}