{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phantom\\\\Desktop\\\\react-ts-todo\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport taskStore from './TaskStore'; // Import Task interface and taskStore\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = observer(_c = () => {\n  const {\n    tasks,\n    addTask,\n    toggleTask,\n    removeTask,\n    newTask,\n    isListLayout,\n    setNewTask,\n    setIsListLayout\n  } = taskStore;\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      addTask({\n        id: String(Date.now()),\n        title: newTask,\n        completed: false,\n        createDate: new Date()\n      });\n      setNewTask('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Almost there: \", tasks.filter(task => task.completed).length / tasks.length * 100, \"% done\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsListLayout(!isListLayout),\n        children: isListLayout ? 'Switch to Tiles' : 'Switch to List'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter task\",\n        value: newTask,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddButtonClick,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","observer","taskStore","jsxDEV","_jsxDEV","App","_c","tasks","addTask","toggleTask","removeTask","newTask","isListLayout","setNewTask","setIsListLayout","handleInputChange","event","target","value","handleKeyPress","key","id","String","Date","now","title","completed","createDate","className","children","filter","task","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","onKeyPress","handleAddButtonClick","_c2","$RefreshReg$"],"sources":["C:/Users/Phantom/Desktop/react-ts-todo/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport taskStore, { Task } from './TaskStore'; // Import Task interface and taskStore\n\n\n\nconst App: React.FC = observer(() => {\n  const { tasks, addTask, toggleTask, removeTask, newTask, isListLayout, setNewTask, setIsListLayout } = taskStore;\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTask(event.target.value);\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      addTask({\n        id: String(Date.now()),\n        title: newTask,\n        completed: false,\n        createDate: new Date(),\n      });\n      setNewTask('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <p>Almost there: {tasks.filter(task => task.completed).length / tasks.length * 100}% done</p>\n        <button onClick={() => setIsListLayout(!isListLayout)}>\n          {isListLayout ? 'Switch to Tiles' : 'Switch to List'}\n        </button>\n      </nav>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter task\"\n          value={newTask}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n        />\n        <button onClick={handleAddButtonClick}>Add Task</button> {/* Use handleKeyPress */}\n      </div>\n      {/* Rest of the component */}\n    </div>\n  );\n});\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,SAAS,MAAgB,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI/C,MAAMC,GAAa,GAAGJ,QAAQ,CAAAK,EAAA,GAACA,CAAA,KAAM;EACnC,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,UAAU;IAAEC,UAAU;IAAEC,OAAO;IAAEC,YAAY;IAAEC,UAAU;IAAEC;EAAgB,CAAC,GAAGZ,SAAS;EAEhH,MAAMa,iBAAiB,GAAIC,KAA0C,IAAK;IACxEH,UAAU,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,cAAc,GAAIH,KAA4C,IAAK;IACvE,IAAIA,KAAK,CAACI,GAAG,KAAK,OAAO,EAAE;MACzBZ,OAAO,CAAC;QACNa,EAAE,EAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;QACtBC,KAAK,EAAEd,OAAO;QACde,SAAS,EAAE,KAAK;QAChBC,UAAU,EAAE,IAAIJ,IAAI,CAAC;MACvB,CAAC,CAAC;MACFV,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACET,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,GAAG,gBAAc,EAACtB,KAAK,CAACuB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,SAAS,CAAC,CAACM,MAAM,GAAGzB,KAAK,CAACyB,MAAM,GAAG,GAAG,EAAC,QAAM;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7FhC,OAAA;QAAQiC,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAAC,CAACF,YAAY,CAAE;QAAAiB,QAAA,EACnDjB,YAAY,GAAG,iBAAiB,GAAG;MAAgB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNhC,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QACEkC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBrB,KAAK,EAAEP,OAAQ;QACf6B,QAAQ,EAAEzB,iBAAkB;QAC5B0B,UAAU,EAAEtB;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhC,OAAA;QAAQiC,OAAO,EAAEK,oBAAqB;QAAAb,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC,CAAC;AAACO,GAAA,GAxCGtC,GAAa;AA0CnB,eAAeA,GAAG;AAAC,IAAAC,EAAA,EAAAqC,GAAA;AAAAC,YAAA,CAAAtC,EAAA;AAAAsC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}