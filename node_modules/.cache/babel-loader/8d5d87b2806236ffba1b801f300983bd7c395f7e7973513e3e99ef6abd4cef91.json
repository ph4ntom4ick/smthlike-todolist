{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phantom\\\\Desktop\\\\react-ts-todo\\\\src\\\\App.tsx\";\n// App.tsx\nimport React from 'react';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport taskStore from './TaskStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = observer(_c = () => {\n  const {\n    tasks,\n    addTask,\n    toggleTask,\n    removeTask,\n    newTask,\n    isListLayout,\n    setNewTask,\n    setIsListLayout\n  } = taskStore;\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      addTask({\n        id: String(Date.now()),\n        title: newTask,\n        completed: false,\n        createDate: new Date()\n      });\n      setNewTask('');\n    }\n  };\n  const handleAddButtonClick = () => {\n    addTask({\n      id: String(Date.now()),\n      title: newTask,\n      completed: false,\n      createDate: new Date()\n    });\n    setNewTask('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Almost there: \", tasks.filter(task => task.completed).length / tasks.length * 100, \"% done\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsListLayout(!isListLayout),\n        children: isListLayout ? 'Switch to Tiles' : 'Switch to List'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter task\",\n        value: newTask,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddButtonClick,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isListLayout ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleTask(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: task.completed ? 'completed' : '',\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => removeTask(task.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tiles-container\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task-item tile ${task.completed ? 'completed' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleTask(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => removeTask(task.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","observer","taskStore","jsxDEV","_jsxDEV","App","_c","tasks","addTask","toggleTask","removeTask","newTask","isListLayout","setNewTask","setIsListLayout","handleInputChange","event","target","value","handleKeyPress","key","id","String","Date","now","title","completed","createDate","handleAddButtonClick","className","children","filter","task","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","onKeyPress","map","checked","_c2","$RefreshReg$"],"sources":["C:/Users/Phantom/Desktop/react-ts-todo/src/App.tsx"],"sourcesContent":["// App.tsx\nimport React from 'react';\nimport './App.css';\nimport { observer } from 'mobx-react';\nimport taskStore from './TaskStore';\n\nexport interface Task {\n  id: string;\n  title: string;\n  completed: boolean;\n  createDate: Date;\n}\n\n\nconst App: React.FC = observer(() => {\n  const { tasks, addTask, toggleTask, removeTask, newTask, isListLayout, setNewTask, setIsListLayout } = taskStore;\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTask(event.target.value);\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      addTask({\n        id: String(Date.now()),\n        title: newTask,\n        completed: false,\n        createDate: new Date(),\n      });\n      setNewTask('');\n    }\n  };\n\n  const handleAddButtonClick = () => {\n    addTask({\n      id: String(Date.now()),\n      title: newTask,\n      completed: false,\n      createDate: new Date(),\n    });\n    setNewTask('');\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <p>Almost there: {tasks.filter(task => task.completed).length / tasks.length * 100}% done</p>\n        <button onClick={() => setIsListLayout(!isListLayout)}>\n          {isListLayout ? 'Switch to Tiles' : 'Switch to List'}\n        </button>\n      </nav>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter task\"\n          value={newTask}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n        />\n        <button onClick={handleAddButtonClick}>Add Task</button> {/* Use handleKeyPress */}\n      </div>\n      {isListLayout ? (\n        <ul>\n          {tasks.map((task) => (\n            <li key={task.id} className=\"task-item\">\n              <input\n                type=\"checkbox\"\n                checked={task.completed}\n                onChange={() => toggleTask(task.id)}\n              />\n              <span className={task.completed ? 'completed' : ''}>{task.title}</span>\n              <button className=\"remove-button\" onClick={() => removeTask(task.id)}>\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className=\"tiles-container\">\n          {tasks.map((task) => (\n            <div key={task.id} className={`task-item tile ${task.completed ? 'completed' : ''}`}>\n              <input\n                type=\"checkbox\"\n                checked={task.completed}\n                onChange={() => toggleTask(task.id)}\n              />\n              <span>{task.title}</span>\n              <button className=\"remove-button\" onClick={() => removeTask(task.id)}>\n                Remove\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}