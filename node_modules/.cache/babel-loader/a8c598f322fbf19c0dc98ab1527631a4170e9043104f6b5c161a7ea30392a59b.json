{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phantom\\\\Desktop\\\\gavnoCode\\\\react-ts-todo\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskItem = {\n        id: String(Date.now()),\n        title: newTask,\n        completed: false,\n        createDate: new Date()\n      };\n      setTasks([...tasks, newTaskItem]);\n      setNewTask('');\n    }\n  };\n  const toggleTask = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const removeTask = taskId => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n  };\n  const unfinishedTasks = tasks.filter(task => !task.completed).length;\n  const finishedTasks = tasks.length - unfinishedTasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Finished tasks: \", finishedTasks, \"/\", tasks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter task\",\n        value: newTask,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleTask(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: task.completed ? 'completed' : '',\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => removeTask(task.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","handleInputChange","event","target","value","addTask","trim","newTaskItem","id","String","Date","now","title","completed","createDate","toggleTask","taskId","prevTasks","map","task","removeTask","filter","unfinishedTasks","length","finishedTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/Phantom/Desktop/gavnoCode/react-ts-todo/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\ninterface Task {\n  id: string;\n  title: string;\n  completed: boolean;\n  createDate: Date;\n}\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [newTask, setNewTask] = useState<string>('');\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTask(event.target.value);\n  };\n\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskItem: Task = {\n        id: String(Date.now()),\n        title: newTask,\n        completed: false,\n        createDate: new Date(),\n      };\n\n      setTasks([...tasks, newTaskItem]);\n      setNewTask('');\n    }\n  };\n\n  const toggleTask = (taskId: string) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  const removeTask = (taskId: string) => {\n    setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n  };\n\n  const unfinishedTasks = tasks.filter((task) => !task.completed).length;\n  const finishedTasks = tasks.length - unfinishedTasks;\n\n  return (\n    <div className=\"App\">\n      <nav>\n      <p>Finished tasks: {finishedTasks}/{tasks.length}</p>\n      </nav>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter task\"\n          value={newTask}\n          onChange={handleInputChange}\n        />\n        <button onClick={addTask}>Add Task</button>\n      </div>\n      <ul>\n        {tasks.map((task) => (\n          <li key={task.id} className=\"task-item\">\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onChange={() => toggleTask(task.id)}\n            />\n            <span className={task.completed ? 'completed' : ''}>{task.title}</span>\n            <button className=\"remove-button\" onClick={() => removeTask(task.id)}>\n              Remove\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}